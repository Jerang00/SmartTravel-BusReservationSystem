<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - BusGo</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/admin.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <div class="admin-container">
        <div class="admin-sidebar">
            <h2>Admin Panel</h2>
            <nav>
                <a href="/admin" class="active">
                    <i class="fas fa-home"></i> Dashboard
                </a>
                <a href="/admin/routes">
                    <i class="fas fa-route"></i> Routes
                </a>
                <a href="/admin/buses">
                    <i class="fas fa-bus"></i> Buses
                </a>
                <a href="/admin/schedules">
                    <i class="fas fa-calendar"></i> Schedules
                </a>
                <a href="/admin/bookings">
                    <i class="fas fa-ticket-alt"></i> Bookings
                </a>
                <a href="/admin/users">
                    <i class="fas fa-users"></i> Users
                </a>
                <a href="/admin/payments">
                    <i class="fas fa-money-bill-wave"></i> Payments
                </a>
                <a href="/admin/fares">
                    <i class="fas fa-tag"></i> Fares
                </a>
                <a href="/admin/logout">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </a>
            </nav>
        </div>

        <div class="admin-content">
            <div class="section-header">
                <h1>Dashboard Overview</h1>
            </div>

            <div class="dashboard-stats">
                <div class="stat-card">
                    <i class="fas fa-ticket-alt"></i>
                    <div class="stat-info">
                        <h3>Total Bookings</h3>
                        <p><%= bookings.length %></p>
                    </div>
                </div>
                <div class="stat-card">
                    <i class="fas fa-users"></i>
                    <div class="stat-info">
                        <h3>Total Users</h3>
                        <p><%= users.length %></p>
                    </div>
                </div>
                <div class="stat-card">
                    <i class="fas fa-money-bill-wave"></i>
                    <div class="stat-info">
                        <h3>Total Revenue</h3>
                        <p>₹<%= totalRevenue %></p>
                    </div>
                </div>
                <div class="stat-card">
                    <i class="fas fa-bus"></i>
                    <div class="stat-info">
                        <h3>Active Buses</h3>
                        <p><%= buses.filter(bus => bus.Status === 'Active').length %></p>
                    </div>
                </div>
            </div>

            <div class="dashboard-sections">
                <div class="section-card">
                    <h2>Recent Bookings</h2>
                    <div class="table-responsive">
                        <table>
                            <thead>
                                <tr>
                                    <th>Booking ID</th>
                                    <th>User</th>
                                    <th>Route</th>
                                    <th>Date</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% recentBookings.forEach(booking => { %>
                                    <tr>
                                        <td><%= booking.BookingID %></td>
                                        <td><%= booking.UserName %></td>
                                        <td><%= booking.Source %> - <%= booking.Destination %></td>
                                        <td><%= new Date(booking.BookingDate).toLocaleDateString() %></td>
                                        <td><span class="status-badge <%= booking.Status.toLowerCase() %>"><%= booking.Status %></span></td>
                                        <td>
                                            <button class="btn-edit" data-booking-id="<%= booking.BookingID %>">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            <button class="btn-delete" data-booking-id="<%= booking.BookingID %>">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="section-card">
                    <h2>Recent Payments</h2>
                    <div class="table-responsive">
                        <table>
                            <thead>
                                <tr>
                                    <th>Transaction ID</th>
                                    <th>Booking ID</th>
                                    <th>Amount</th>
                                    <th>Date</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% recentPayments.forEach(payment => { %>
                                    <tr>
                                        <td><%= payment.TransactionID %></td>
                                        <td><%= payment.BookingID %></td>
                                        <td>₹<%= payment.Amount %></td>
                                        <td><%= new Date(payment.PaymentDate).toLocaleDateString() %></td>
                                        <td><span class="status-badge <%= payment.Status.toLowerCase() %>"><%= payment.Status %></span></td>
                                        <td>
                                            <button class="btn-edit" data-transaction-id="<%= payment.TransactionID %>">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            <button class="btn-delete" data-transaction-id="<%= payment.TransactionID %>">
                                                <i class="fas fa-undo"></i>
                                            </button>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // View booking handlers
            document.querySelectorAll('.btn-edit[data-booking-id]').forEach(button => {
                button.addEventListener('click', function() {
                    const bookingId = this.dataset.bookingId;
                    window.location.href = `/admin/bookings/${bookingId}`;
                });
            });

            // Cancel booking handlers
            document.querySelectorAll('.btn-delete[data-booking-id]').forEach(button => {
                button.addEventListener('click', function() {
                    const bookingId = this.dataset.bookingId;
                    if (confirm('Are you sure you want to cancel this booking?')) {
                        fetch(`/admin/bookings/${bookingId}/cancel`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                location.reload();
                            } else {
                                alert('Failed to cancel booking');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('An error occurred');
                        });
                    }
                });
            });

            // View payment handlers
            document.querySelectorAll('.btn-edit[data-transaction-id]').forEach(button => {
                button.addEventListener('click', function() {
                    const transactionId = this.dataset.transactionId;
                    window.location.href = `/admin/payments/${transactionId}`;
                });
            });

            // Refund payment handlers
            document.querySelectorAll('.btn-delete[data-transaction-id]').forEach(button => {
                button.addEventListener('click', function() {
                    const transactionId = this.dataset.transactionId;
                    if (confirm('Are you sure you want to process a refund?')) {
                        fetch(`/admin/payments/${transactionId}/refund`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                location.reload();
                            } else {
                                alert('Failed to process refund');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('An error occurred');
                        });
                    }
                });
            });
        });
    </script>
</body>
</html> 